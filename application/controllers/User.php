<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
    } 

    /*
     * Listing of users
     */
    function index()
    {
        // Check login
        if (!$this->session->userdata('adlog')) {
            redirect('user/login');
        }
        
        $data['users'] = $this->User_model->get_all_users();
        
        $data['_view'] = 'user/index';
        $this->load->view('layouts/main',$data);
    }
    
    // Log in user
    public function login() {
        $data['_view'] = 'user/login';
        
        $this->form_validation->set_rules('password', 'Password', 'required');
        
        if($this->form_validation->run() === FALSE) {
            $this->load->view('layouts/main',$data);
        } else {
            // Get and encrypt the password
            $password = $this->hash($this->input->post('password'));
            
            //Login user
            $admin = $this->User_model->login($password);
            
            if ($admin) {
                // Create session
                $user_data = array(
                    'adlog' => TRUE
                );
                
                $this->session->set_userdata($user_data);

                // Set message
                $this->session->set_flashdata('user_loggedin', 'You are now logged in');
                
                redirect();
            } else {
                // Set message
                $this->session->set_flashdata('login_failed', 'Login is invalid');

                redirect('user/login');
            }
        }
    }

    /*
     * Logging user out
     */
    public function logout() {
        // Unset user data
        $this->session->unset_userdata('adlog');
        
        $this->session->set_flashdata('user_loggedout', 'You are now logged out');                
        
        redirect();
    }

    /*
     * Adding a new user
     */
    function add()
    {   
        // Check login
        if (!$this->session->userdata('adlog')) {
            redirect('user/login');
        }
        
        $this->load->library('form_validation');

		$this->form_validation->set_rules('UserName','UserName','required|max_length[30]');
		$this->form_validation->set_rules('ShowName','ShowName','required|max_length[30]');
		$this->form_validation->set_rules('Password','Password','required|max_length[64]');
                $this->form_validation->set_rules('Password2', 'Comfirm Password', 'matches[Password]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'ShowName' => $this->input->post('ShowName'),
				'Password' => $this->hash($this->input->post('Password')),
				'UserName' => $this->input->post('UserName'),
            );
            
            $user_id = $this->User_model->add_user($params);
            redirect('user/index');
        }
        else
        {            
            $data['_view'] = 'user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a user
     */
    function edit($UserID)
    {   
        // Check login
        if (!$this->session->userdata('adlog')) {
            redirect('user/login');
        }
        
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($UserID);
        
        if(isset($data['user']['UserID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('UserName','UserName','required|max_length[30]');
			$this->form_validation->set_rules('ShowName','ShowName','required|max_length[30]');
			$this->form_validation->set_rules('Password','Password','required|max_length[64]');
                        $this->form_validation->set_rules('Password2', 'Comfirm Password', 'matches[Password]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'ShowName' => $this->input->post('ShowName'),
                                        'Password' => $this->hash($this->input->post('Password')),
					'UserName' => $this->input->post('UserName'),
                );

                $this->User_model->update_user($UserID,$params);            
                redirect('user/index');
            }
            else
            {
                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 

    /*
     * Deleting user
     */
    function remove($UserID)
    {
        // Check login
        if (!$this->session->userdata('adlog')) {
            redirect('user/login');
        }
        
        $user = $this->User_model->get_user($UserID);

        // check if the user exists before trying to delete it
        if(isset($user['UserID']))
        {
            $this->User_model->delete_user($UserID);
            redirect('user/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }
    
    /*
     * function to hash a string
     */
    public function hash($string){
        return hash('sha512', $string . config_item('encryption_key'));
    }
    
}
